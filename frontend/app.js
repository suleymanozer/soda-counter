// frontend/app.js
document.addEventListener('DOMContentLoaded', () => {
    const apiUrl = '/api';

    // Formlar ve Listeler
    const cezaFormu = document.getElementById('cezaFormu');
    const kisiEkleFormu = document.getElementById('kisiEkleFormu');
    const icecekEkleFormu = document.getElementById('icecekEkleFormu');
    
    const cezaListesi = document.getElementById('cezaListesi');
    const kisiSelect = document.getElementById('kisi');
    const icecekSelect = document.getElementById('icecek');

    // --- VERÄ° Ã‡EKME VE DOLDURMA FONKSÄ°YONLARI ---

    // KiÅŸileri Ã§ek ve dropdown'Ä± doldur
    async function kisileriDoldur() {
        const response = await fetch(`${apiUrl}/kisiler`);
        const { data } = await response.json();
        kisiSelect.innerHTML = '<option value="">KiÅŸi SeÃ§in...</option>'; // Listeyi temizle ve baÅŸlÄ±k ekle
        data.forEach(kisi => {
            const option = document.createElement('option');
            option.value = kisi.ad_soyad;
            option.textContent = kisi.ad_soyad;
            kisiSelect.appendChild(option);
        });
    }

    // Ä°Ã§ecekleri Ã§ek ve dropdown'Ä± doldur
    async function icecekleriDoldur() {
        const response = await fetch(`${apiUrl}/icecekler`);
        const { data } = await response.json();
        icecekSelect.innerHTML = '<option value="">Ä°Ã§ecek SeÃ§in...</option>'; // Listeyi temizle ve baÅŸlÄ±k ekle
        data.forEach(icecek => {
            const option = document.createElement('option');
            option.value = icecek.ad;
            option.textContent = icecek.ad;
            icecekSelect.appendChild(option);
        });
    }

    // Mevcut cezalarÄ± listele
    async function cezalariGetir() {
        try {
            const response = await fetch(`${apiUrl}/cezalar`);
            const { data } = await response.json();
            cezaListesi.innerHTML = '';
            if (data.length === 0) {
                cezaListesi.innerHTML = '<p>Ã–denmemiÅŸ ceza yok! ðŸŽ‰</p>';
                return;
            }
            data.forEach(ceza => {
                const el = document.createElement('div');
                el.className = 'ceza-item';
                el.innerHTML = `<span><strong>${ceza.kisi}</strong>: ${ceza.icecek}</span><button onclick="window.odendiIsaretle(${ceza.id})">Ã–dendi</button>`;
                cezaListesi.appendChild(el);
            });
        } catch (error) {
            cezaListesi.innerHTML = '<p>Veriler yÃ¼klenemedi. Backend Ã§alÄ±ÅŸÄ±yor mu?</p>';
        }
    }

    // --- FORM GÃ–NDERME Ä°ÅžLEMLERÄ° ---

    // Yeni ceza ekle
    cezaFormu.addEventListener('submit', async (e) => {
        e.preventDefault();
        await fetch(`${apiUrl}/cezalar`, {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ kisi: kisiSelect.value, icecek: icecekSelect.value }),
        });
        cezalariGetir(); // Ceza listesini yenile
    });

    // Yeni kiÅŸi ekle
    kisiEkleFormu.addEventListener('submit', async (e) => {
        e.preventDefault();
        const yeniKisiInput = document.getElementById('yeniKisiAdi');
        await fetch(`${apiUrl}/kisiler`, {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ ad_soyad: yeniKisiInput.value }),
        });
        yeniKisiInput.value = ''; // Input'u temizle
        kisileriDoldur(); // KiÅŸi listesini yenile
    });

    // Yeni iÃ§ecek ekle
    icecekEkleFormu.addEventListener('submit', async (e) => {
        e.preventDefault();
        const yeniIcecekInput = document.getElementById('yeniIcecekAdi');
        await fetch(`${apiUrl}/icecekler`, {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ ad: yeniIcecekInput.value }),
        });
        yeniIcecekInput.value = ''; // Input'u temizle
        icecekleriDoldur(); // Ä°Ã§ecek listesini yenile
    });


    // --- DÄ°ÄžER FONKSÄ°YONLAR ---

    // CezayÄ± "Ã–dendi" olarak iÅŸaretle (Global scope'a taÅŸÄ±dÄ±k)
    window.odendiIsaretle = async (id) => {
        await fetch(`${apiUrl}/cezalar/${id}/odendi`, { method: 'PUT' });
        cezalariGetir(); // Listeyi yenile
    }

    // --- SAYFA Ä°LK YÃœKLENDÄ°ÄžÄ°NDE ---
    function init() {
        cezalariGetir();
        kisileriDoldur();
        icecekleriDoldur();
    }

    init();
});
